/* css/index.css - Page-specific styles for the landing page */

/* Header adjustments for landing page if any (most handled by components.css) */
.header-main { /* Specifically for index.html's fixed header */
    position: fixed; /* Overrides sticky from components if needed, or keep sticky */
    /* any other index-specific header tweaks */
}

/* Hero Section */
.hero {
    position: relative;
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden; /* Keeps floating shapes contained */
    padding-top: 70px; /* Account for fixed header height */
}

.hero-background {
    position: absolute;
    inset: 0;
    z-index: -1;
}

.floating-shapes .shape {
    position: absolute;
    border-radius: var(--border-radius-round);
    background: linear-gradient(135deg, rgba(99, 102, 241, 0.1), rgba(139, 92, 246, 0.1)); /* Use var(--primary-color) with alpha */
    animation: float 20s infinite linear;
    transition: var(--transition-medium); /* For JS hover pause */
}

.floating-shapes .shape-1 { width: 200px; height: 200px; top: 20%; left: 10%; animation-delay: 0s; }
.floating-shapes .shape-2 { width: 150px; height: 150px; top: 60%; right: 20%; animation-delay: -5s; }
.floating-shapes .shape-3 { width: 100px; height: 100px; bottom: 20%; left: 20%; animation-delay: -10s; }
.floating-shapes .shape-4 { width: 120px; height: 120px; top: 30%; right: 10%; animation-delay: -15s; }

@keyframes float {
    0%, 100% { transform: translateY(0px) rotate(0deg); }
    33% { transform: translateY(-30px) rotate(120deg); }
    66% { transform: translateY(30px) rotate(240deg); }
}

.hero-container { /* Uses .container from global.css */
    text-align: center;
    z-index: 1; /* Above background shapes */
}

.hero-content {
    max-width: 800px;
    margin: 0 auto;
}

.hero-title {
    font-size: clamp(3rem, 8vw, 5rem); /* Fluid typography */
    font-weight: 800;
    line-height: 1.1;
    margin-bottom: var(--space-lg);
    color: var(--text-light-primary);
}
/* .gradient-text is in global.css */

.hero-description {
    font-size: 1.25rem;
    color: var(--text-light-secondary);
    margin-bottom: var(--space-xxl);
    line-height: 1.7;
}

.hero-buttons {
    display: flex;
    gap: var(--space-lg);
    justify-content: center;
    margin-bottom: calc(var(--space-xxl) * 1.5); /* More space */
    flex-wrap: wrap;
}

.hero-buttons .btn { /* Target all buttons in hero-buttons */
    padding: var(--space-md) var(--space-lg); /* Example: 16px 24px */
    font-size: 1rem; /* 16px */
    /* You can override specific .btn-lg properties here too */
}
/* .btn styles are in components.css */

.hero-stats {
    display: flex;
    justify-content: center;
    gap: var(--space-xxl);
    flex-wrap: wrap;
}

.stat {
    text-align: center;
}

.stat-number {
    font-size: 2.5rem;
    font-weight: 800;
    /* Uses .gradient-text from global.css if desired, or a single color */
    color: var(--primary-color); /* Fallback or primary display */
    margin-bottom: var(--space-xs);
}

.stat-label {
    color: var(--text-light-muted);
    font-weight: 500;
}

/* Section Base Styling */
.section-padding { /* Utility class for consistent section padding */
    padding: var(--space-xxl) 0; /* Approx 8rem, adjust as needed */
}
.section-padding:nth-child(even) { /* Optional alternating background */
    background: rgba(0,0,0, 0.1); /* Subtle difference */
}

.section-header {
    text-align: center;
    margin-bottom: var(--space-xxl);
}

.section-header h2 {
    font-size: 2.5rem; /* Adjusted from global h2 if needed */
    font-weight: 700;
    margin-bottom: var(--space-md);
    color: var(--text-light-primary);
}

.section-header p {
    font-size: 1.125rem; /* 18px */
    color: var(--text-light-muted);
    max-width: 600px;
    margin: 0 auto;
}

/* Features Section */
/* .features-grid uses ul now, li items are .feature-card (styled by .card in components.css) */
.features-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: var(--space-xl);
    list-style: none; /* Remove default list styling */
    padding: 0;
}

.feature-card { /* Extends .card from components.css */
    text-align: center;
}

.feature-icon {
    width: 64px;
    height: 64px;
    background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
    border-radius: var(--border-radius-lg);
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto var(--space-lg);
    color: var(--text-light-primary);
}
.feature-icon .icon { /* Style for actual SVG icon */
    width: 32px;
    height: 32px;
}

.feature-card h3 {
    font-size: 1.5rem;
    font-weight: 700;
    margin-bottom: var(--space-md);
    color: var(--text-light-primary);
}

.feature-card p {
    color: var(--text-light-muted);
    line-height: 1.7;
}

/* Featured Projects Section */
.search-filter-controls {
    display: flex;
    gap: var(--space-lg);
    margin-bottom: var(--space-xxl);
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
}

.search-wrapper {
    position: relative;
    flex: 1 1 300px; /* Allow shrinking and growing, base 300px */
    max-width: 450px;
}

.search-icon-svg { /* If you add a class to the search SVG */
    position: absolute;
    left: var(--space-md);
    top: 50%;
    transform: translateY(-50%);
    color: var(--text-light-muted);
    pointer-events: none;
}

#searchInput.form-input { /* Target specific input */
    padding-left: calc(var(--space-md) * 2.5); /* Make space for icon */
}

#skillFilter.form-select {
    flex: 0 1 200px; /* Don't grow much, base 200px */
    min-width: 180px;
}

.projects-grid { /* Uses ul now */
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
    gap: var(--space-xl);
    list-style: none;
    padding: 0;
}

.project-card { /* Extends .card from components.css */
    display: flex;
    flex-direction: column;
}

.project-card .card-header { /* card-header specific to project cards */
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--space-md);
}

.project-card .user-info {
    display: flex;
    align-items: center;
    gap: var(--space-md);
}

.project-card .user-avatar {
    position: relative;
    width: 48px;
    height: 48px;
    background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
    border-radius: var(--border-radius-lg);
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--text-light-primary);
    font-weight: 700;
    font-size: 1rem;
}
.project-card .user-avatar .avatar-initials { /* If you wrap initials in a span */
    /* styles for initials */
}

.project-card .status-indicator {
    position: absolute;
    bottom: -2px;
    right: -2px;
    width: 14px;
    height: 14px;
    border-radius: var(--border-radius-round);
    border: 2px solid var(--bg-dark-secondary); /* Match card background */
}
.project-card .status-indicator.online { background: var(--success-color); }
.project-card .status-indicator.busy { background: var(--warning-color); }
/* Add other statuses */


.project-card .user-details h3 {
    font-size: 1.1rem;
    font-weight: 600;
    color: var(--text-light-primary);
    margin-bottom: var(--space-xs);
}

.project-card .department {
    color: var(--text-light-muted);
    font-size: 0.875rem;
}

.project-urgency {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
    padding: var(--space-xs) var(--space-sm);
    border-radius: var(--border-radius-sm);
    font-size: 0.8125rem; /* 13px */
    font-weight: 500;
}
.project-urgency .icon { /* For the clock icon */
    width: 14px;
    height: 14px;
}

.project-urgency.urgent { background: rgba(239, 68, 68, 0.2); color: var(--error-color); }
.project-urgency.normal { background: rgba(34, 197, 94, 0.2); color: var(--success-color); }
.project-urgency.critical { background: rgba(220, 38, 127, 0.2); color: var(--accent-color); }


.project-card .card-content {
    margin-bottom: var(--space-lg);
    flex-grow: 1; /* Allow content to take up space */
}

.project-card .project-title {
    font-size: 1.25rem;
    font-weight: 700;
    color: var(--text-light-primary);
    margin-bottom: var(--space-sm);
}

.project-card .project-description {
    color: var(--text-light-muted);
    line-height: 1.6;
    margin-bottom: var(--space-md);
    font-size: 0.9rem;
}

.project-card .skills-tags { /* Renamed for clarity */
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-sm);
}
/* .skill-tag is in components.css */

.project-card .card-actions {
    display: flex;
    gap: var(--space-md);
    margin-top: auto; /* Push actions to the bottom if card content varies */
}
.project-card .card-actions .btn {
    flex: 1;
}
.project-card .card-actions .btn .icon {
    width: 18px; height: 18px;
}


/* About Section */
.about-content {
    max-width: 800px;
    margin: 0 auto;
    text-align: center;
    color: var(--text-light-secondary);
    font-size: 1.1rem;
    line-height: 1.8;
}

.about-content p {
    margin-bottom: var(--space-lg);
}

/* Contact Section */
.contact-grid {
    display: grid;
    grid-template-columns: 1fr; /* Mobile first */
    gap: var(--space-xl);
    align-items: flex-start;
}

@media (min-width: 768px) {
    .contact-grid {
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: var(--space-xxl);
    }
}

.contact-info, .contact-form-wrapper { /* Both extend .card from components.css */
    padding: var(--space-xl); /* Or keep card default */
}

.contact-info h3, .contact-form-wrapper h3 {
    font-size: 1.8rem;
    margin-bottom: var(--space-md);
}
.contact-info p, .contact-form-wrapper p {
    color: var(--text-light-muted);
    margin-bottom: var(--space-lg);
}

.info-item {
    display: flex;
    align-items: center;
    gap: var(--space-md);
    margin-bottom: var(--space-md);
    font-size: 1rem;
    color: var(--text-light-secondary);
}
.info-item .icon { /* For emoji/SVG */
    font-size: 1.5rem; /* Adjust if using actual SVGs */
    color: var(--primary-color);
    flex-shrink: 0;
}
.info-item a {
    color: var(--text-light-secondary);
}
.info-item a:hover {
    color: var(--primary-color);
}

.social-links {
    margin-top: var(--space-xl);
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-md);
}

.social-link { /* Consider making this a .btn .btn-outline or similar */
    background: var(--border-color-light);
    color: var(--primary-color);
    padding: var(--space-sm) var(--space-lg);
    border-radius: var(--border-radius-md);
    font-weight: 500;
    transition: var(--transition-medium);
}
.social-link:hover {
    background: var(--primary-color);
    color: var(--text-light-primary);
    transform: translateY(-2px);
}

.contact-form .form-input, .contact-form .form-textarea {
    margin-bottom: var(--space-lg); /* Add margin to inputs directly in form context */
}
.contact-form .form-textarea {
    min-height: 120px;
    resize: vertical;
}
.contact-form .btn-primary {
    width: auto; /* Or 100% if desired */
    margin-top: var(--space-sm); /* Space above button */
}


/* Modal styles are in components.css */

/* Footer styles are in components.css */
/* index.html specific footer adjustments if any */
.footer-main {
    /* Styles for index page footer if different from global */
}


/* Animations */
.fade-in-up {
    opacity: 0;
    transform: translateY(30px);
    animation: fadeInUpAnimation 0.8s ease forwards; /* Renamed to avoid conflict */
}

@keyframes fadeInUpAnimation { /* Renamed to avoid conflict */
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Responsive Design - Mobile Menu */
@media (max-width: 768px) {
    .nav-main-links {
        display: none; /* Initially hidden */
        flex-direction: column;
        position: absolute;
        top: 70px; /* Height of the header */
        left: 0;
        width: 100%;
        background: var(--bg-dark-secondary); /* Slightly different from header for distinction */
        border-top: 1px solid var(--border-color-light);
        padding: var(--space-md) 0;
        box-shadow: 0 4px 20px var(--shadow-color-dark);
        z-index: calc(var(--z-index-sticky) - 1); /* Below header but above content */
    }

    .nav-main-links.active { /* Class toggled by JS */
        display: flex;
    }

    .nav-main-link {
        padding: var(--space-md) var(--space-xl);
        text-align: center;
        width: 100%;
        border-bottom: 1px solid var(--border-color-medium);
    }
    .nav-main-link:last-child {
        border-bottom: none;
    }
    .nav-main-link::after {
        content: none; /* Remove underline on mobile for main links */
    }

    .nav-main-cta { /* Mobile styling for CTA in nav */
        margin: var(--space-md) var(--space-xl) 0; /* Add to bottom of links */
        width: auto; /* Let it size to content or make it full width */
        display: block;
        text-align: center;
    }

    .mobile-menu-toggle { /* From components.css, ensure it's displayed */
        display: flex;
    }

    .hero-title { font-size: 2.25rem; }
    .hero-description { font-size: 1rem; }
    .hero-buttons { flex-direction: column; align-items: center; }
    .hero-stats { gap: var(--space-lg); }
    .stat-number { font-size: 2rem; }

    .section-header h2 { font-size: 1.8rem; }
    .section-header p { font-size: 0.9rem; }

    .search-filter-controls { flex-direction: column; }
    .search-wrapper, #skillFilter.form-select { max-width: 100%; flex-basis: auto; }

    .projects-grid, .features-grid { grid-template-columns: 1fr; }
    .project-card .card-actions { flex-direction: column; }

    .about-content { font-size: 1rem; }
    .contact-grid { grid-template-columns: 1fr; }
}

@media (max-width: 480px) {
    .hero-title { font-size: 1.8rem; }
    /* Further fine-tuning for very small screens */
}