DROP DATABASE teamup;

-- Create the TeamUp database

CREATE DATABASE teamup;
USE teamup;

-- Create register_info table
CREATE TABLE register_info (
    id INT AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    university VARCHAR(100) NOT NULL,
    student_id VARCHAR(15) NOT NULL UNIQUE,
    department VARCHAR(50) NOT NULL,
    semester VARCHAR(10) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    skills TEXT,
    other_skills VARCHAR(255),
    active_projects INT DEFAULT 0,
    team_requests INT DEFAULT 0,
    rating INT DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    
);

-- Create login_info table
CREATE TABLE login_info (
    id INT AUTO_INCREMENT PRIMARY KEY,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id) REFERENCES register_info(id)
);

-- CREATE TABLE posts (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    project_title VARCHAR(255) NOT NULL,
    project_description TEXT NOT NULL,
    required_skills VARCHAR(255) NOT NULL,
    team_size INT NOT NULL,
    contact_email VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES register_info(id)
);

INSERT INTO register_info 
(first_name, last_name, university, student_id, department, semester, email, password, skills, other_skills)
VALUES
('Pritom', 'Saha', 'Daffodil International University', '221-15-4869', 'Computer Science & Engineering', '7th', 'pritomsahawww@gmail.com', 'p', 'C, Java, SQL', 'IoT'),
('Rubayed', 'Reza', 'Daffodil International University', '221-15-4870', 'Computer Science & Engineering', '7th', 'rubayed@gmail.com', 'r', 'Python, PHP', 'Flutter'),
('Ritu', 'Akter', 'Daffodil International University', '221-15-4871', 'Computer Science & Engineering', '7th', 'ritu@gmail.com', 'r', 'HTML, CSS, JS', 'React');


-- CREATE TABLE interests (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    post_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES register_info(id) ON DELETE CASCADE,
    FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE,
    UNIQUE KEY unique_interest (user_id, post_id)
);